<?xml version="1.0"?>

<launch>
<arg name="fake" default="true"/>
<arg name="auto_control_configurations" default="false"/>
<arg name="auto_controllers_configurations" default="$(find battery_cell_configurations)/config/auto_controllers_configurations.yaml" />
<arg name="controllers_configurations" default="$(find battery_cell_configurations)/config/controllers_configurations.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
<arg name="controllers_dispatches" default="$(find battery_cell_configurations)/config/controllers_dispatches.yaml"/>
<arg name="auto_controllers_dispatches" default="$(find battery_cell_configurations)/config/auto_controllers_dispatches.yaml"/>
<arg name="configuration_manager_name" default="configuration_manager"/>

<!-- CNR_ROS_CONTROL CONFIGURATION -->
<param name="debug_config" value="$(arg controllers_configurations)"/>
<param name="debug_dispatches" value="$(arg controllers_dispatches)"/>
<rosparam unless= "$(arg auto_control_configurations)" command="load" file="$(arg controllers_dispatches)" />
<rosparam if= "$(arg auto_control_configurations)" command="load" file="$(arg auto_controllers_dispatches)" />

<rosparam if= "$(arg fake)" command="load" file="$(find battery_cell_configurations)/config/comau_level0_hw.yaml" />
<rosparam unless= "$(arg fake)" command="load" file="$(find battery_cell_configurations)/config/comau_level0_pybullet_hw.yaml" />
<rosparam command="load" file="$(find battery_cell_configurations)/config/comau_level1_hw.yaml" />

<rosparam if= "$(arg fake)" command="load" file="$(find battery_cell_configurations)/config/comau_level0_controllers_fake.yaml" />
<rosparam unless= "$(arg fake)" command="load" file="$(find battery_cell_configurations)/config/comau_level0_controllers_real.yaml" />
<rosparam command="load" file="$(find battery_cell_configurations)/config/comau_level1_controllers.yaml" />

<rosparam if= "$(arg fake)" command="load" file="$(find battery_cell_configurations)/config/kuka_level0_hw.yaml" />
<rosparam unless= "$(arg fake)" command="load" file="$(find battery_cell_configurations)/config/kuka_level0_pybullet_hw.yaml" />
<rosparam command="load" file="$(find battery_cell_configurations)/config/kuka_level1_hw.yaml" />

<rosparam if= "$(arg fake)" command="load" file="$(find battery_cell_configurations)/config/kuka_level0_controllers_fake.yaml" />
<rosparam unless= "$(arg fake)" command="load" file="$(find battery_cell_configurations)/config/kuka_level0_controllers_real.yaml" />
<rosparam command="load" file="$(find battery_cell_configurations)/config/kuka_level1_controllers.yaml" />

<include file="$(find battery_cell_description)/launch/upload.launch"/> <!-- Load URDF -->
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /> <!-- Compute TF forward kin. -->

<rosparam if= "$(arg auto_control_configurations)" command="load" file="$(arg auto_controllers_configurations)" />
<node if= "$(arg auto_control_configurations)" name="auto_control_configs_generator" pkg="skills_util" type="auto_control_configs_generator.py" output="screen" args="$(arg configuration_manager_name)" />

<rosparam unless= "$(arg auto_control_configurations)" command="load" file="$(arg controllers_configurations)" />

<node pkg="cnr_configuration_manager"
      type="cnr_configuration_manager_node"
      name="$(arg configuration_manager_name)" output="screen">

  <rosparam>
    appenders: [screen,file]
    levels: [info,debug]
    file_name: "configuration_manager"
    append_to_file: true
    pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%M:%04L][%c] %m%n"
  </rosparam>

  <rosparam unless= "$(arg auto_control_configurations)" command="load" file="$(arg controllers_configurations)" />
  <param name="num_worker_threads" value="40" />

</node>

<node pkg="cnr_configuration_manager" type="dispatcher" name="configuration_dispatcher" output="screen" >
<rosparam>
  appenders: [screen]
  levels: [info]
  file_name: "configuration_dispatcher"
  pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%M:%04L][%c] %m%n"
</rosparam>
  <remap from="~configuration_dispatches" to="/configuration_dispatches" />
</node>

</launch>
