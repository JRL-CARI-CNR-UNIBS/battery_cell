<!-- EYE-IN_HAND -->
<launch>
  <!-- (start your robot's MoveIt! stack, e.g. include its moveit_planning_execution.launch.py) -->
  <!-- (start your tracking system's ROS driver) -->

  
  
   <include file="$(find easy_handeye2)/launch/calibrate.launch.py">
    <arg name="calibration_type" value="eye_in_hand"/>

    <!-- you can choose any identifier, as long as you use the same for publishing the calibration -->
    <arg name="name" value="hand_eye_calibration"/>

    <!-- fill in the following parameters according to your robot's published tf frames -->
    <arg name="robot_base_frame" value="/world"/>
    <arg name="robot_effector_frame" value="/kuka_sensor"/>

    <!-- fill in the following parameters according to your tracking system's published tf frames -->
    <arg name="tracking_base_frame" value="/zed_camera_link"/>
    <arg name="tracking_marker_frame" value="/optical_target"/>
  </include>
</launch>

<!-- EYE-TO-HAND -->
<!-- <launch>
   <include file="$(find easy_handeye2)/launch/calibrate.launch.py">
    <arg name="calibration_type" value="eye_on_base"/>
    <arg name="name" value="hand_eye_calibration"/>

    fill in the following parameters according to your robot's published tf frames
    <arg name="robot_base_frame" value="/base_link"/>
    <arg name="robot_effector_frame" value="/ee_link"/>

    fill in the following parameters according to your tracking system's published tf frames
    <arg name="tracking_base_frame" value="/optical_origin"/>
    <arg name="tracking_marker_frame" value="/optical_target"/>
  </include>
</launch> -->